package types

// BuildOptions
type BuildOptions struct {
	// BuilderName is the intermediate container or build stage container name
	BuilderName string `yaml:"builder_name"`
	// BuilderOptions are those options comming from builder
	BuilderOptions map[string]interface{} `yaml:"builder_options"`
	// BuilderVarMappings are those variables name that will be automatically generated by builder and set to the driver for building the image
	BuilderVarMappings map[string]string `yaml:"builder_variables_mapping"`
	// Cascade flag determines whether to start children build once the image built is finished
	Cascade bool `yaml:"cascade"`
	// ConnectionLocal indicates whether to use a local connection during the build when ansible-playbook driver is used
	ConnectionLocal bool `yaml:"connection_local"`
	// Dockerfile is the path to Dockerfile when docker driver is used
	Dockerfile string `yaml:"dockerfile"`
	// DryRun flag indicate whether to simulate the image built
	DryRun bool `yaml:"dry_run"`
	// EnableSemanticVersionTags flag indicate whether to generate tags based on sematic version automatically
	EnableSemanticVersionTags bool `yaml:"enable_semantic_version_tags"`
	// ImageFromName is the parent's image name
	ImageFromName string `yaml:"image_from_name"`
	// ImageFromRegistryNamespace is the parent's image namespace
	ImageFromRegistryNamespace string `yaml:"image_from_namespace"`
	// ImageFromRegistryHost is the parent's image registry host
	ImageFromRegistryHost string `yaml:"image_from_registry_host"`
	// ImageFromVersion is the paren't image version
	ImageFromVersion string `yaml:"image_from_version"`
	// ImageName is the name of the image to be built
	ImageName string `yaml:"image_name"`
	// ImageVersion is the version of the image to be built
	ImageVersion string `yaml:"image_version"`
	// NumWorkers set the number of workers to start. It is the number of concurrent images to be.
	NumWorkers int `yaml:"num_workers"`
	// OutputPrefix prefixes each output line
	OutputPrefix string `yaml:"output_prefix"`
	// PersistentVars is a persistent variables list to be sent to driver
	PersistentVars map[string]interface{} `yaml:"persistent_variables"`
	// RegistryNamespace is the namespace of the image to be built
	RegistryNamespace string `yaml:"image_namespace"`
	// RegistryHost is the registry's host of the image to be built
	RegistryHost string `yaml:"image_registry_host"`
	// PushImages flag indicate whether to push the image to the registry once it has been built
	PushImages bool `yaml:"push_images"`
	// SemanticVersionTagsTemplate are the semantic version tags templates to generate automatically
	SemanticVersionTagsTemplate []string `yaml:"semantic_version_tags_template"`
	// Tags is a list of tags to generate
	Tags []string `yaml:"tags"`
	// Vars is a variables list to be sent to driver
	Vars map[string]interface{} `yaml:"variables"`

	// Transitorial pending to move buildOptions to driver package

	// PullAuthUsername
	PullAuthUsername string
	// PullAuthPassword
	PullAuthPassword string
	// PushAuthUsername
	PushAuthUsername string
	// PushAuthPassword
	PushAuthPassword string

	// RemoveAfterBuild flag indicate whether to remove the image after build
	RemoveAfterBuild bool
	// Lables is a list of labels to add to the image
	Labels map[string]string
}
